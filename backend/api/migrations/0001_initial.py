# Generated by Django 5.1.7 on 2025-04-08 14:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Response",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("response", models.TextField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaskModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "description",
                    models.TextField(help_text="Descrição da tarefa - o que ela faz"),
                ),
                (
                    "goal",
                    models.TextField(
                        help_text="Objetivo da tarefa - o que ela deve alcançar"
                    ),
                ),
                (
                    "output_format",
                    models.TextField(help_text="Formato esperado da saída da tarefa"),
                ),
                (
                    "prompt_template",
                    models.TextField(
                        blank=True,
                        help_text="Template de prompt para execução da tarefa (opcional)",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Parâmetros adicionais da tarefa",
                    ),
                ),
                (
                    "max_retries",
                    models.IntegerField(
                        default=3, help_text="Número máximo de tentativas"
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        default=60, help_text="Tempo limite em segundos"
                    ),
                ),
                (
                    "validation_required",
                    models.BooleanField(
                        default=True, help_text="Se é necessário validar o resultado"
                    ),
                ),
                (
                    "cache_results",
                    models.BooleanField(
                        default=True, help_text="Se os resultados devem ser cacheados"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Tasks",
                "db_table": "genaitor_tasks",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AgentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("MAIN", "main"),
                            ("SPECIALIST", "specialist"),
                            ("VALIDATOR", "validator"),
                            ("REFINER", "refiner"),
                            ("SUMMARIZER", "summarizer"),
                            ("SCIENTIST", "scientist"),
                            ("ENGINEER", "engineer"),
                            ("ARCHITECT", "atchitect"),
                            ("CUSTOM", "custom"),
                        ],
                        default="MAIN",
                        max_length=50,
                    ),
                ),
                ("config", models.JSONField(blank=True, default=dict)),
                ("conversation_history", models.JSONField(blank=True, default=list)),
                ("task_history", models.JSONField(blank=True, default=list)),
                (
                    "max_retries",
                    models.IntegerField(
                        default=3, help_text="Número máximo de tentativas"
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        default=60, help_text="Tempo limite em segundos"
                    ),
                ),
                (
                    "validation_required",
                    models.BooleanField(
                        default=True, help_text="Se é necessário validar o resultado"
                    ),
                ),
                (
                    "cache_results",
                    models.BooleanField(
                        default=True, help_text="Se os resultados devem ser cacheados"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "tasks",
                    models.ManyToManyField(related_name="agents", to="api.taskmodel"),
                ),
            ],
        ),
    ]
